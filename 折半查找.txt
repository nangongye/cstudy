	折半查找就像在数据两端设置障碍，通过不断缩小障碍的范围提高效率，
具体的做法就是每次都比较数据中间的值，再缩小查找范围，这样就能提高查找效率。
对于排序后的数据可以提高查找速度
	算法如下：
		首先假设有三个变量low、mid、high，分别保存数组元素的开始、中间
和末尾的符号。假定有10个元素，开始时令low=10，high=9，mid=（0+9）/2=4（因为是整型变量）
		
		（1）如果序号为mid的数组元素的值与X相等，则表示查找到数据
返回该序号mid。
		（2）如果X<a【mid】，则表示要查找的数据X位于low与mid-1序号
之间，就不需要寻找mid与high序号之间的元素了。因此，将high变量的值改为mid-1，重新
查找low与mid-1（high变量的新值）之间的数据
		（3）如果X>a【mid】，则表示要查找的数据X位于mid+1与high序号之间
就不需要再寻找low与mid之间的元素了。因此，将low变量的值改为mid-1，重新查找mid+1
（low变量的新值）与high之间的数据
		（4）逐步循环，如果到low与high时还未找到目标数据X，则表示数组
中无此数据

		为什么是mid-1？
		   因为X>mid，又数组下标是整数，故是mid-1，表示在mid的前面
