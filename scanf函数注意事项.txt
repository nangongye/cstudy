	记住scanf函数只会一个一个字符的读取
	1.空白符问题

  	  int a;  
    	 printf("input the data\n");  
   	 scanf("%d\n",&a);// 这里多了一个回车符\n  
   	 printf("%d",a);  
   	 return 0;  

	结果要输入两个数程序才结束，而不是预期的一个。why？

	原因：用空白符结束格式化扫描条件（"%d\n"）时，scanf会跳过空白符去读下一个字符，所以你必须再输入一个数
。
	这里的空白符包括空格，制表符，换行符，回车符和换页符。所以如果你用scanf("%d  ",&a)（以空格结束）也会出现同样的问题。

	解决方法：这种错误大多是输入的时候不小心，多注意一点就好了。这种问题也不好检查，编译没有问题，一个空格也不容易看出来。

	当你的程序出现上面的问题时，自己对照检查一下就可以了。

	2.缓冲区问题

	这是一个非常容易错的地方，我就错过多次。

  	  char c[5]={0};  
  
 	  printf("please input 4 characters\n");  
  
 	  for(int i = 0; i < 4; i++)  
       	 	scanf("%c",&c[i]);  
  

	如果输入:
	a
	b
	c
	那么循环就会“提前”结束了.

	原因： 输入a和第一个回车后，a和这个回车符都留在缓冲区中。第一个scanf读取了a，但是输入缓冲区里面还留有一个‘\n’，
	第二个scanf读取这个‘\n’。然 后输入b和第二个回车，同样的，第三个scanf读取了b，第四个scanf读取了第二个回车符‘\n’。
	第五个读取了c。所以五个scanf都执行了，并没有提前结束。只不过有的scanf读取到了回车符而已。

	解决方法：用gets函数
		代码示例：	
		    char c[5]={0};    
   		    printf("please input 4 characters\n");  
 		    gets(c);  

	但要注意： 这个函数自动把你最后敲的回车转换为字符'\0'（输入即代表结束，因为它是字符结束标志）。如果你的输入超过了数组的大小，那么就会产生错误。

	3.scanf()函数的参数输入类型不匹配问题

	这是我在csdn论坛上见到的问题，这个错误有时候会让人莫名其妙。


    	int a=123;  
    	char c='a';  
  
    	printf("input a int and character\n");  
  
    	scanf("%d%c",&a,&c);    
    	printf("a=%d\nc='%c'\n",a,c);  

	当输入a 回车 后，会直接跳过下面的scanf()语句，直接输出为

	input a int and character
	a
	a=123
	c='a'

	原因： 对于scanf("%d%c",&a,&c)，scanf语句执行时，首先试图从缓冲区中读入一个%d类型的数据
	如果和第一个参数类型匹 配，则继续从缓冲区中读取数据和第二个参数进行匹配，依次进行下去，直到匹配完所有的参数；

	如果其中有一个参数不匹配，那就从这个地方跳出，忽略这个 scanf后面所有的参数，而去执行下一条语句。

	解决方法：scanf() 函数执行成功时的返回值是成功读取的变量数。也就是说，你这个scanf()函数有几个变量，如果scanf()函数全部正常读取，它就返回几个。

	但这里还要注意另一个问题，如果输入了非法数据，键盘缓冲区就可能还个有残余信息问题。

	4. 输入字符串中有空格问题（很有用）

	首先需要介绍scanf()函数中一种很少见但很有用的转换字符：[...]和[ ^...]。

	"%[...]" 表示只提取与[]中相匹配的内容，碰到其他内容则终止提取；

	"%[^...]"（注意异或符'^'）表示提取内容，碰到[]中相匹配的内容则终止提取； 

	注意：这里的匹配是按字符进行的！


   	 char strings[128];   
    	scanf("%[1234567890]",strings);   
    	printf("%s",strings);  


	输入：1234werew后
	结果是：1234

通过运行可以发现它的作用是：如果输入的字符属于方括号内字符串中某个字符，
那么就提取该字符；如果一经发现不属于就结束提取。该方法会自动加上一个字符串结束符到已经提取的字符后面。

scanf("%[^1234567890]",strings); 它的作用是：如果一经发现输入的字符属于方括号内字符串中某个字符，
那么就结束提取；如果不属于就提取该字符。该方法会自动加上一个字符串结束符到已经提取的字符后面。

注意：方括号两边不能空格，否则空格也会算在里面的。

用途：用这种方法可以解决scanf()的输入中不能有空格的问题。只要用scanf("%[^\n]",strings); 就可以了。

下面是一个实例：
    char name[16]={0};  
  
    printf("please input your name\n");  
    scanf("%[^\n]", name);  
  
    printf("your name is %s\n", name);  
